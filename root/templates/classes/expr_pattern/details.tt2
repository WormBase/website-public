[%


WRAPPER $field_block title="Experiment" key="experimental_details";
	 details = fields.experimental_details.data; # alias
	 FOREACH technique IN details.types;
	 	 IF technique.1;
    	      technique.0.replace('_',' ') _ ' assay: ' _ technique.1 _ '<br>';
         ELSE;
		      technique.0.replace('_',' ') _ '<br>';
		 END;
	 END;
	 IF details.antibody_info;
		pluralize("Antibody", details.antibody_info.size);
		' used for this assay: '  _ tags2link(details.antibody_info) _ '<br>';
	 END;
	 IF details.transgene;
		pluralize("Transgene", details.transgene.size);
			' used for this assay: ' _ cell_content(details.transgene, ' ') _ '<br>';
     ELSIF details.construct;
		pluralize("Construct", details.construct.size);
			' used for this assay: ' _ cell_content(details.construct, ' ') _ '<br>';
	 END;
	 IF details.strain;
		pluralize("Strain", details.strain.size) _ ': ';
			tags2link(details.strain) _ '<br>';
	 END;
	 IF details.variation;
		'Genome editing: ';
			tags2link(details.variation) _ '<br>';
	 END;
	 IF details.author;
		pluralize("Author", details.author.size) _ ': ';
			 tags2link(details.author) _ '<br>';
	 END;
	 IF details.date;
		'Date: ' _ details.date;
	 END;
END;

# Flattened at request of D. Raciti, 2011.06.28
#WRAPPER $field_block title="Expressed By" key="expressed_by";
	FOREACH type IN fields.expressed_by.data.sort;
        typelabel = type.replace('_', ' ') FILTER ucfirst;
	$type;
        WRAPPER $field_block title=pluralize(typelabel, fields.expressed_by.data.$type.size) key='';
           tags2link(fields.expressed_by.data.$type) _ '<br>';
        END;
    END;
#END;

WRAPPER $field_block title=pluralize("Sequence feature", fields.sequence_feature.data.size) key='sequence_feature';
    tags2link(fields.sequence_feature.data);
END;

WRAPPER $field_block title="Expressed In" key='';

   WRAPPER $field_block title="Anatomy term" key='anatomy_ontology';
      result = [];
	  FOREACH item IN fields.anatomy_ontology.data;
		 result.push(tag2link(item.anatomy_term));
	  END;
       result.join(', ');
   END;

   WRAPPER $field_block title="GO term" key='gene_ontology';
      result = [];
	  FOREACH item IN fields.gene_ontology.data;
		 result.push(tag2link(item.go_term));
	  END;
       result.join(', ');
   END;


   FOREACH type IN fields.expressed_in.data.sort;
       typelabel = type.replace('_', ' ') FILTER ucfirst;
       WRAPPER $field_block title=pluralize(typelabel, fields.expressed_in.data.$type.size) key='';
           tags2link(fields.expressed_in.data.$type);
       END;
   END;

END;

%]
